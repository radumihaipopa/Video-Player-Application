{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MihaiPopa\\\\WebstormProjects\\\\video-player-application\\\\src\\\\components\\\\ProgressBar.js\";\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport throttle from 'lodash.throttle';\nconst ProgressBar = _ref => {\n  let {\n    videoRef\n  } = _ref;\n  const innerProgressRef = useRef(null);\n  const updateProgressBarRef = useRef(null);\n  const handleProgressBarClick = event => {\n    const progress = event.currentTarget;\n    const progressWidth = progress.offsetWidth;\n    const clickPosition = event.clientX - progress.getBoundingClientRect().left;\n    const clickPercentage = clickPosition / progressWidth * 100;\n    const seekTime = clickPercentage * videoRef.current.duration / 100;\n    videoRef.current.currentTime = seekTime;\n  };\n  const updateProgressBar = throttle(() => {\n    const innerProgress = innerProgressRef.current;\n    const currentTime = videoRef.current.currentTime;\n    const duration = videoRef.current.duration;\n    const progressPercentage = currentTime / duration * 100;\n    innerProgress.style.width = `${progressPercentage}%`;\n    scrubber.style.left = `${progressPercentage}%`;\n  }, 100); // Throttle the update to every 100ms\n\n  useEffect(() => {\n    updateProgressBarRef.current = updateProgressBar;\n  }, [updateProgressBar]);\n  useEffect(() => {\n    const video = videoRef.current;\n    const handleTimeUpdate = () => {\n      if (updateProgressBarRef.current) {\n        updateProgressBarRef.current();\n      }\n    };\n    video.addEventListener('timeupdate', updateProgressBar);\n    return () => {\n      video.removeEventListener('timeupdate', updateProgressBar);\n    };\n  }, [videoRef]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    onClick: handleProgressBarClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-progress\",\n    ref: innerProgressRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scrubber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })));\n};\nexport default ProgressBar;","map":{"version":3,"names":["React","useRef","useEffect","useCallback","throttle","ProgressBar","_ref","videoRef","innerProgressRef","updateProgressBarRef","handleProgressBarClick","event","progress","currentTarget","progressWidth","offsetWidth","clickPosition","clientX","getBoundingClientRect","left","clickPercentage","seekTime","current","duration","currentTime","updateProgressBar","innerProgress","progressPercentage","style","width","scrubber","video","handleTimeUpdate","addEventListener","removeEventListener","createElement","className","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref"],"sources":["C:/Users/MihaiPopa/WebstormProjects/video-player-application/src/components/ProgressBar.js"],"sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\r\nimport throttle from 'lodash.throttle';\r\n\r\nconst ProgressBar = ({ videoRef }) => {\r\n    const innerProgressRef = useRef(null);\r\n    const updateProgressBarRef = useRef(null);\r\n\r\n    const handleProgressBarClick = (event) => {\r\n        const progress = event.currentTarget;\r\n        const progressWidth = progress.offsetWidth;\r\n        const clickPosition = event.clientX - progress.getBoundingClientRect().left;\r\n        const clickPercentage = (clickPosition / progressWidth) * 100;\r\n        const seekTime = (clickPercentage * videoRef.current.duration) / 100;\r\n\r\n        videoRef.current.currentTime = seekTime;\r\n    };\r\n\r\n    const updateProgressBar =\r\n        throttle(() => {\r\n            const innerProgress = innerProgressRef.current;\r\n            const currentTime = videoRef.current.currentTime;\r\n            const duration = videoRef.current.duration;\r\n            const progressPercentage = (currentTime / duration) * 100;\r\n\r\n            innerProgress.style.width = `${progressPercentage}%`;\r\n            scrubber.style.left = `${progressPercentage}%`;\r\n        }, 100); // Throttle the update to every 100ms\r\n\r\n    useEffect(() => {\r\n        updateProgressBarRef.current = updateProgressBar;\r\n    }, [updateProgressBar]);\r\n\r\n    useEffect(() => {\r\n        const video = videoRef.current;\r\n\r\n        const handleTimeUpdate = () => {\r\n            if (updateProgressBarRef.current) {\r\n                updateProgressBarRef.current();\r\n            }\r\n        };\r\n\r\n        video.addEventListener('timeupdate', updateProgressBar);\r\n\r\n        return () => {\r\n            video.removeEventListener('timeupdate', updateProgressBar);\r\n        };\r\n    }, [videoRef]);\r\n\r\n    return (\r\n        <div className=\"progress-bar\" onClick={handleProgressBarClick}>\r\n            <div className=\"progress\">\r\n                <div className=\"inner-progress\" ref={innerProgressRef}></div>\r\n                <div className=\"scrubber\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;"],"mappings":"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"},"metadata":{},"sourceType":"module"}