{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MihaiPopa\\\\WebstormProjects\\\\video-player-application\\\\src\\\\components\\\\ShakaPlayer.js\";\nimport React, { useRef, useEffect, useCallback, useState } from 'react';\nimport shaka from 'shaka-player/dist/shaka-player.compiled.js';\nimport ProgressBar from './ProgressBar';\nimport SkipButtons from './SkipButtons';\nconst ShakaPlayer = () => {\n  const videoRef = useRef(null);\n  const playerRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [initialBandwidth, setInitialBandwidth] = useState(500000); // Initial low-resolution bandwidth\n\n  const onError = useCallback(error => {\n    console.error('Error code', error.code, 'object', error);\n  }, []);\n  const onErrorEvent = useCallback(event => {\n    onError(event.detail);\n  }, [onError]);\n  useEffect(() => {\n    const initializePlayer = async () => {\n      shaka.polyfill.installAll();\n      if (!shaka.Player.isBrowserSupported()) {\n        console.error('Browser does not support Shaka Player');\n        return;\n      }\n      const player = new shaka.Player(videoRef.current);\n      playerRef.current = player;\n\n      // Attach error event listener\n      player.addEventListener('error', onErrorEvent);\n\n      // Configure adaptive streaming\n      player.configure({\n        abr: {\n          defaultBandwidthEstimate: initialBandwidth // 500 Kbps\n        }\n      });\n\n      // First choice was to use Shaka Player due to its great adaptive streaming algorithms and performance optimizations\n      // Due to a networking issue while downloading the manifest file I left the implementation aside\n      // Player works ok with MPD files\n\n      // MPD file below\n      const manifestUrl = 'https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd';\n      try {\n        await player.load(manifestUrl);\n        console.log('The video has now been loaded!');\n        setIsLoading(false);\n        setIsPlaying(true); // Autoplay the video\n        videoRef.current.play();\n      } catch (error) {\n        onError(error);\n      }\n    };\n    initializePlayer();\n    return () => {\n      if (playerRef.current) {\n        // Clean up the player and event listeners\n        playerRef.current.removeEventListener('error', onErrorEvent);\n        playerRef.current.destroy();\n      }\n    };\n  }, [initialBandwidth, onErrorEvent, onError]);\n  const handleVideoPlay = useCallback(() => {\n    setIsPlaying(true);\n    videoRef.current.play();\n  }, []);\n  const handleVideoPause = useCallback(() => {\n    setIsPlaying(false);\n    videoRef.current.pause();\n  }, []);\n  const handleSkipBack = useCallback(() => {\n    const currentBandwidth = playerRef.current.getStats().estimatedBandwidth;\n    if (currentBandwidth > initialBandwidth) {\n      setInitialBandwidth(currentBandwidth);\n      const manifestURL = 'https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd';\n      playerRef.current.unload().then(() => playerRef.current.load(manifestURL)).then(() => {\n        console.log('Switched to higher-resolution video');\n        videoRef.current.play();\n      }).catch(error => {\n        console.error('Error loading higher-resolution video:', error);\n      });\n    }\n  }, [initialBandwidth]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    className: \"shaka-video\",\n    ref: videoRef,\n    onClick: isPlaying ? handleVideoPause : handleVideoPlay,\n    muted: isPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 6\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProgressBar, {\n    videoRef: videoRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SkipButtons, {\n    videoRef: videoRef,\n    onSkipBack: handleSkipBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }))));\n};\nexport default ShakaPlayer;","map":{"version":3,"names":["React","useRef","useEffect","useCallback","useState","shaka","ProgressBar","SkipButtons","ShakaPlayer","videoRef","playerRef","isPlaying","setIsPlaying","isLoading","setIsLoading","initialBandwidth","setInitialBandwidth","onError","error","console","code","onErrorEvent","event","detail","initializePlayer","polyfill","installAll","Player","isBrowserSupported","player","current","addEventListener","configure","abr","defaultBandwidthEstimate","manifestUrl","load","log","play","removeEventListener","destroy","handleVideoPlay","handleVideoPause","pause","handleSkipBack","currentBandwidth","getStats","estimatedBandwidth","manifestURL","unload","then","catch","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","muted","Fragment","onSkipBack"],"sources":["C:/Users/MihaiPopa/WebstormProjects/video-player-application/src/components/ShakaPlayer.js"],"sourcesContent":["import React, { useRef, useEffect, useCallback, useState } from 'react';\nimport shaka from 'shaka-player/dist/shaka-player.compiled.js';\nimport ProgressBar from './ProgressBar';\nimport SkipButtons from './SkipButtons';\n\nconst ShakaPlayer = () => {\n\tconst videoRef = useRef(null);\n\tconst playerRef = useRef(null);\n\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst [initialBandwidth, setInitialBandwidth] = useState(500000); // Initial low-resolution bandwidth\n\n\tconst onError = useCallback((error) => {\n\t\tconsole.error('Error code', error.code, 'object', error);\n\t}, []);\n\n\tconst onErrorEvent = useCallback(\n\t\t(event) => {\n\t\t\tonError(event.detail);\n\t\t},\n\t\t[onError]\n\t);\n\n\tuseEffect(() => {\n\t\tconst initializePlayer = async () => {\n\t\t\tshaka.polyfill.installAll();\n\t\t\tif (!shaka.Player.isBrowserSupported()) {\n\t\t\t\tconsole.error('Browser does not support Shaka Player');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst player = new shaka.Player(videoRef.current);\n\t\t\tplayerRef.current = player;\n\n\t\t\t// Attach error event listener\n\t\t\tplayer.addEventListener('error', onErrorEvent);\n\n\t\t\t// Configure adaptive streaming\n\t\t\tplayer.configure({\n\t\t\t\tabr: {\n\t\t\t\t\tdefaultBandwidthEstimate: initialBandwidth, // 500 Kbps\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// First choice was to use Shaka Player due to its great adaptive streaming algorithms and performance optimizations\n\t\t\t// Due to a networking issue while downloading the manifest file I left the implementation aside\n\t\t\t// Player works ok with MPD files\n\n\t\t\t// MPD file below\n\t\t\tconst manifestUrl = 'https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd';\n\t\t\ttry {\n\t\t\t\tawait player.load(manifestUrl);\n\t\t\t\tconsole.log('The video has now been loaded!');\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tsetIsPlaying(true); // Autoplay the video\n\t\t\t\tvideoRef.current.play();\n\t\t\t} catch (error) {\n\t\t\t\tonError(error);\n\t\t\t}\n\t\t};\n\n\t\tinitializePlayer();\n\n\t\treturn () => {\n\t\t\tif (playerRef.current) {\n\t\t\t\t// Clean up the player and event listeners\n\t\t\t\tplayerRef.current.removeEventListener('error', onErrorEvent);\n\t\t\t\tplayerRef.current.destroy();\n\t\t\t}\n\t\t};\n\t}, [initialBandwidth, onErrorEvent, onError]);\n\n\tconst handleVideoPlay = useCallback(() => {\n\t\tsetIsPlaying(true);\n\t\tvideoRef.current.play();\n\t}, []);\n\n\tconst handleVideoPause = useCallback(() => {\n\t\tsetIsPlaying(false);\n\t\tvideoRef.current.pause();\n\t}, []);\n\n\tconst handleSkipBack = useCallback(() => {\n\t\tconst currentBandwidth = playerRef.current.getStats().estimatedBandwidth;\n\n\t\tif (currentBandwidth > initialBandwidth) {\n\t\t\tsetInitialBandwidth(currentBandwidth);\n\t\t\tconst manifestURL = 'https://storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd';\n\n\t\t\tplayerRef.current\n\t\t\t\t.unload()\n\t\t\t\t.then(() => playerRef.current.load(manifestURL))\n\t\t\t\t.then(() => {\n\t\t\t\t\tconsole.log('Switched to higher-resolution video');\n\t\t\t\t\tvideoRef.current.play();\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.error('Error loading higher-resolution video:', error);\n\t\t\t\t});\n\t\t}\n\t}, [initialBandwidth]);\n\n\treturn (\n\t\t<div className=\"video-container\">\n\t\t\t<video\n\t\t\t\tclassName=\"shaka-video\"\n\t\t\t\tref={videoRef}\n\t\t\t\tonClick={isPlaying ? handleVideoPause : handleVideoPlay}\n\t\t\t\tmuted={isPlaying}\n\t\t\t/>\n\t\t\t<div className=\"controls-container\">\n\t\t\t\t{isLoading ? (\n\t\t\t\t\t<div>Loading...</div>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ProgressBar videoRef={videoRef} />\n\t\t\t\t\t\t<SkipButtons videoRef={videoRef} onSkipBack={handleSkipBack}/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ShakaPlayer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}