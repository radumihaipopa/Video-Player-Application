{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MihaiPopa\\\\WebstormProjects\\\\video-player-application\\\\src\\\\components\\\\ProgressBar.js\";\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nconst ProgressBar = _ref => {\n  let {\n    videoRef\n  } = _ref;\n  const innerProgressRef = useRef(null);\n  const scrubberRef = useRef(null);\n  const [isScrubbing, setIsScrubbing] = useState(false);\n  const updateProgressBar = useCallback(() => {\n    const innerProgress = innerProgressRef.current;\n    const scrubber = scrubberRef.current;\n    const currentTime = videoRef.current.currentTime;\n    const duration = videoRef.current.duration;\n    const progressPercentage = currentTime / duration * 100;\n    innerProgress.style.width = `${progressPercentage}%`;\n    scrubber.style.left = `${progressPercentage}%`;\n    if (!videoRef.current.paused) {\n      requestAnimationFrame(updateProgressBar);\n    }\n  }, [videoRef]);\n  const handleScrubberMouseDown = () => {\n    setIsScrubbing(true);\n  };\n  const handleMouseMove = useCallback(event => {\n    if (!isScrubbing) return;\n    const progress = innerProgressRef.current;\n    const progressWidth = progress.offsetWidth;\n    const clickPosition = event.clientX - progress.getBoundingClientRect().left;\n    const clickPercentage = clickPosition / progressWidth * 100;\n    const seekTime = clickPercentage * videoRef.current.duration / 100;\n    videoRef.current.currentTime = seekTime;\n  }, [isScrubbing, videoRef]);\n  const handleMouseUp = useCallback(() => {\n    setIsScrubbing(false);\n  }, []);\n  useEffect(() => {\n    const video = videoRef.current;\n    video.addEventListener('timeupdate', updateProgressBar);\n    return () => {\n      video.removeEventListener('timeupdate', updateProgressBar);\n    };\n  }, [videoRef, updateProgressBar]);\n  useEffect(() => {\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [handleMouseMove, handleMouseUp]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-progress\",\n    ref: innerProgressRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scrubber\",\n    ref: scrubberRef,\n    onMouseDown: handleScrubberMouseDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })));\n};\nexport default ProgressBar;","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","ProgressBar","_ref","videoRef","innerProgressRef","scrubberRef","isScrubbing","setIsScrubbing","updateProgressBar","innerProgress","current","scrubber","currentTime","duration","progressPercentage","style","width","left","paused","requestAnimationFrame","handleScrubberMouseDown","handleMouseMove","event","progress","progressWidth","offsetWidth","clickPosition","clientX","getBoundingClientRect","clickPercentage","seekTime","handleMouseUp","video","addEventListener","removeEventListener","document","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseDown"],"sources":["C:/Users/MihaiPopa/WebstormProjects/video-player-application/src/components/ProgressBar.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\r\n\r\nconst ProgressBar = ({ videoRef }) => {\r\n    const innerProgressRef = useRef(null);\r\n    const scrubberRef = useRef(null);\r\n    const [isScrubbing, setIsScrubbing] = useState(false);\r\n\r\n    const updateProgressBar = useCallback(() => {\r\n        const innerProgress = innerProgressRef.current;\r\n        const scrubber = scrubberRef.current;\r\n        const currentTime = videoRef.current.currentTime;\r\n        const duration = videoRef.current.duration;\r\n        const progressPercentage = (currentTime / duration) * 100;\r\n\r\n        innerProgress.style.width = `${progressPercentage}%`;\r\n        scrubber.style.left = `${progressPercentage}%`;\r\n\r\n        if (!videoRef.current.paused) {\r\n            requestAnimationFrame(updateProgressBar);\r\n        }\r\n    }, [videoRef]);\r\n\r\n    const handleScrubberMouseDown = () => {\r\n        setIsScrubbing(true);\r\n    };\r\n\r\n    const handleMouseMove = useCallback(\r\n        (event) => {\r\n            if (!isScrubbing) return;\r\n\r\n            const progress = innerProgressRef.current;\r\n            const progressWidth = progress.offsetWidth;\r\n            const clickPosition = event.clientX - progress.getBoundingClientRect().left;\r\n            const clickPercentage = (clickPosition / progressWidth) * 100;\r\n            const seekTime = (clickPercentage * videoRef.current.duration) / 100;\r\n\r\n            videoRef.current.currentTime = seekTime;\r\n        },\r\n        [isScrubbing, videoRef]\r\n    );\r\n\r\n    const handleMouseUp = useCallback(() => {\r\n        setIsScrubbing(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const video = videoRef.current;\r\n\r\n        video.addEventListener('timeupdate', updateProgressBar);\r\n\r\n        return () => {\r\n            video.removeEventListener('timeupdate', updateProgressBar);\r\n        };\r\n    }, [videoRef, updateProgressBar]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousemove', handleMouseMove);\r\n        document.addEventListener('mouseup', handleMouseUp);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousemove', handleMouseMove);\r\n            document.removeEventListener('mouseup', handleMouseUp);\r\n        };\r\n    }, [handleMouseMove, handleMouseUp]);\r\n\r\n    return (\r\n        <div className=\"progress-bar\">\r\n            <div className=\"progress\">\r\n                <div className=\"inner-progress\" ref={innerProgressRef}></div>\r\n                <div\r\n                    className=\"scrubber\"\r\n                    ref={scrubberRef}\r\n                    onMouseDown={handleScrubberMouseDown}\r\n                ></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;"],"mappings":"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"},"metadata":{},"sourceType":"module"}