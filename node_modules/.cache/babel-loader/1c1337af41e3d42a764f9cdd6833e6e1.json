{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MihaiPopa\\\\WebstormProjects\\\\video-player-application\\\\src\\\\components\\\\ProgressBar.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nconst ProgressBar = _ref => {\n  let {\n    videoRef\n  } = _ref;\n  const progressRef = useRef(null);\n  const scrubberRef = useRef(null);\n  const [isScrubbing, setIsScrubbing] = useState(false);\n  useEffect(() => {\n    const progressElement = progressRef.current;\n    const scrubberElement = scrubberRef.current;\n    const handleScrubberMouseDown = () => {\n      setIsScrubbing(true);\n      videoRef.current.pause();\n    };\n    const handleScrubberMouseUp = () => {\n      setIsScrubbing(false);\n      videoRef.current.play();\n    };\n    const handleScrubberMouseMove = event => {\n      if (isScrubbing) {\n        const progressWidth = progressElement.offsetWidth;\n        const clickPosition = event.clientX - progressElement.getBoundingClientRect().left;\n        const clickPercentage = clickPosition / progressWidth * 100;\n        const seekTime = clickPercentage * videoRef.current.duration() / 100;\n        videoRef.current.currentTime = seekTime;\n      }\n    };\n    scrubberElement.addEventListener('mousedown', handleScrubberMouseDown);\n    scrubberElement.addEventListener('mouseup', handleScrubberMouseUp);\n    scrubberElement.addEventListener('mousemove', handleScrubberMouseMove);\n    return () => {\n      scrubberElement.removeEventListener('mousedown', handleScrubberMouseDown);\n      scrubberElement.removeEventListener('mouseup', handleScrubberMouseUp);\n      scrubberElement.removeEventListener('mousemove', handleScrubberMouseMove);\n    };\n  }, [videoRef, isScrubbing]);\n  useEffect(() => {\n    const video = videoRef.current;\n    const updateProgressBar = () => {\n      const progressElement = progressRef.current;\n      const scrubberElement = scrubberRef.current;\n      const progressPercentage = video.currentTime / video.duration * 100;\n      const scrubberPosition = `${progressPercentage}%`;\n      progressElement.style.width = scrubberPosition;\n      scrubberElement.style.left = scrubberPosition;\n    };\n    video.addEventListener('timeupdate', updateProgressBar);\n    return () => {\n      video.removeEventListener('timeupdate', updateProgressBar);\n    };\n  }, [videoRef]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    ref: progressRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scrubber\",\n    ref: scrubberRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }));\n};\nexport default ProgressBar;","map":{"version":3,"names":["React","useRef","useState","useEffect","ProgressBar","_ref","videoRef","progressRef","scrubberRef","isScrubbing","setIsScrubbing","progressElement","current","scrubberElement","handleScrubberMouseDown","pause","handleScrubberMouseUp","play","handleScrubberMouseMove","event","progressWidth","offsetWidth","clickPosition","clientX","getBoundingClientRect","left","clickPercentage","seekTime","duration","currentTime","addEventListener","removeEventListener","video","updateProgressBar","progressPercentage","scrubberPosition","style","width","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref"],"sources":["C:/Users/MihaiPopa/WebstormProjects/video-player-application/src/components/ProgressBar.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\n\r\nconst ProgressBar = ({ videoRef }) => {\r\n    const progressRef = useRef(null);\r\n    const scrubberRef = useRef(null);\r\n    const [isScrubbing, setIsScrubbing] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const progressElement = progressRef.current;\r\n        const scrubberElement = scrubberRef.current;\r\n\r\n        const handleScrubberMouseDown = () => {\r\n            setIsScrubbing(true);\r\n            videoRef.current.pause();\r\n        };\r\n\r\n        const handleScrubberMouseUp = () => {\r\n            setIsScrubbing(false);\r\n            videoRef.current.play();\r\n        };\r\n\r\n        const handleScrubberMouseMove = (event) => {\r\n            if (isScrubbing) {\r\n                const progressWidth = progressElement.offsetWidth;\r\n                const clickPosition = event.clientX - progressElement.getBoundingClientRect().left;\r\n                const clickPercentage = (clickPosition / progressWidth) * 100;\r\n                const seekTime = (clickPercentage * videoRef.current.duration()) / 100;\r\n\r\n                videoRef.current.currentTime = seekTime;\r\n            }\r\n        };\r\n\r\n        scrubberElement.addEventListener('mousedown', handleScrubberMouseDown);\r\n        scrubberElement.addEventListener('mouseup', handleScrubberMouseUp);\r\n        scrubberElement.addEventListener('mousemove', handleScrubberMouseMove);\r\n\r\n        return () => {\r\n            scrubberElement.removeEventListener('mousedown', handleScrubberMouseDown);\r\n            scrubberElement.removeEventListener('mouseup', handleScrubberMouseUp);\r\n            scrubberElement.removeEventListener('mousemove', handleScrubberMouseMove);\r\n        };\r\n    }, [videoRef, isScrubbing]);\r\n\r\n    useEffect(() => {\r\n        const video = videoRef.current;\r\n        const updateProgressBar = () => {\r\n            const progressElement = progressRef.current;\r\n            const scrubberElement = scrubberRef.current;\r\n\r\n            const progressPercentage = (video.currentTime / video.duration) * 100;\r\n            const scrubberPosition = `${progressPercentage}%`;\r\n\r\n            progressElement.style.width = scrubberPosition;\r\n            scrubberElement.style.left = scrubberPosition;\r\n        };\r\n\r\n        video.addEventListener('timeupdate', updateProgressBar);\r\n\r\n        return () => {\r\n            video.removeEventListener('timeupdate', updateProgressBar);\r\n        };\r\n    }, [videoRef]);\r\n\r\n    return (\r\n        <div className=\"progress-bar\">\r\n            <div className=\"progress\" ref={progressRef} />\r\n            <div className=\"scrubber\" ref={scrubberRef} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;"],"mappings":"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"},"metadata":{},"sourceType":"module"}