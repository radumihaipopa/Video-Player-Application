{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MihaiPopa\\\\WebstormProjects\\\\video-player-application\\\\src\\\\components\\\\ProgressBar.js\";\nimport React, { useRef, useEffect, useState } from 'react';\nconst ProgressBar = _ref => {\n  let {\n    videoRef\n  } = _ref;\n  const innerProgressRef = useRef(null);\n  const scrubberRef = useRef(null);\n  const [isScrubbing, setIsScrubbing] = useState(false);\n  const handleProgressBarClick = event => {\n    const progress = event.currentTarget;\n    const progressWidth = progress.offsetWidth;\n    const clickPosition = event.clientX - progress.getBoundingClientRect().left;\n    const clickPercentage = clickPosition / progressWidth * 100;\n    const seekTime = clickPercentage * videoRef.current.duration / 100;\n    videoRef.current.currentTime = seekTime;\n  };\n  const handleScrubberMouseDown = () => {\n    setIsScrubbing(true);\n  };\n  const handleScrubberMouseUp = () => {\n    setIsScrubbing(false);\n  };\n  const handleScrubberMouseMove = event => {\n    if (isScrubbing) {\n      const progress = innerProgressRef.current.parentNode;\n      const progressWidth = progress.offsetWidth;\n      const clickPosition = event.clientX - progress.getBoundingClientRect().left;\n      const clickPercentage = clickPosition / progressWidth * 100;\n      const seekTime = clickPercentage * videoRef.current.duration / 100;\n      videoRef.current.currentTime = seekTime;\n    }\n  };\n  useEffect(() => {\n    const video = videoRef.current;\n    const updateProgressBar = () => {\n      const innerProgress = innerProgressRef.current;\n      const scrubber = scrubberRef.current;\n      const currentTime = video.currentTime;\n      const duration = video.duration;\n      const progressPercentage = currentTime / duration * 100;\n      innerProgress.style.width = `${progressPercentage}%`;\n      scrubber.style.left = `${progressPercentage}%`;\n    };\n    video.addEventListener('timeupdate', updateProgressBar);\n    return () => {\n      video.removeEventListener('timeupdate', updateProgressBar);\n    };\n  }, [videoRef]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    onClick: handleProgressBarClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-progress\",\n    ref: innerProgressRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"scrubber\",\n    ref: scrubberRef,\n    onMouseDown: handleScrubberMouseDown,\n    onMouseUp: handleScrubberMouseUp,\n    onMouseMove: handleScrubberMouseMove,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })));\n};\nexport default ProgressBar;","map":{"version":3,"names":["React","useRef","useEffect","useState","ProgressBar","_ref","videoRef","innerProgressRef","scrubberRef","isScrubbing","setIsScrubbing","handleProgressBarClick","event","progress","currentTarget","progressWidth","offsetWidth","clickPosition","clientX","getBoundingClientRect","left","clickPercentage","seekTime","current","duration","currentTime","handleScrubberMouseDown","handleScrubberMouseUp","handleScrubberMouseMove","parentNode","video","updateProgressBar","innerProgress","scrubber","progressPercentage","style","width","addEventListener","removeEventListener","createElement","className","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseDown","onMouseUp","onMouseMove"],"sources":["C:/Users/MihaiPopa/WebstormProjects/video-player-application/src/components/ProgressBar.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nconst ProgressBar = ({ videoRef }) => {\r\n    const innerProgressRef = useRef(null);\r\n    const scrubberRef = useRef(null);\r\n    const [isScrubbing, setIsScrubbing] = useState(false);\r\n\r\n    const handleProgressBarClick = (event) => {\r\n        const progress = event.currentTarget;\r\n        const progressWidth = progress.offsetWidth;\r\n        const clickPosition = event.clientX - progress.getBoundingClientRect().left;\r\n        const clickPercentage = (clickPosition / progressWidth) * 100;\r\n        const seekTime = (clickPercentage * videoRef.current.duration) / 100;\r\n\r\n        videoRef.current.currentTime = seekTime;\r\n    };\r\n\r\n    const handleScrubberMouseDown = () => {\r\n        setIsScrubbing(true);\r\n    };\r\n\r\n    const handleScrubberMouseUp = () => {\r\n        setIsScrubbing(false);\r\n    };\r\n\r\n    const handleScrubberMouseMove = (event) => {\r\n        if (isScrubbing) {\r\n            const progress = innerProgressRef.current.parentNode;\r\n            const progressWidth = progress.offsetWidth;\r\n            const clickPosition = event.clientX - progress.getBoundingClientRect().left;\r\n            const clickPercentage = (clickPosition / progressWidth) * 100;\r\n            const seekTime = (clickPercentage * videoRef.current.duration) / 100;\r\n\r\n            videoRef.current.currentTime = seekTime;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const video = videoRef.current;\r\n\r\n        const updateProgressBar = () => {\r\n            const innerProgress = innerProgressRef.current;\r\n            const scrubber = scrubberRef.current;\r\n            const currentTime = video.currentTime;\r\n            const duration = video.duration;\r\n            const progressPercentage = (currentTime / duration) * 100;\r\n\r\n            innerProgress.style.width = `${progressPercentage}%`;\r\n            scrubber.style.left = `${progressPercentage}%`;\r\n        };\r\n\r\n        video.addEventListener('timeupdate', updateProgressBar);\r\n\r\n        return () => {\r\n            video.removeEventListener('timeupdate', updateProgressBar);\r\n        };\r\n    }, [videoRef]);\r\n\r\n    return (\r\n        <div className=\"progress-bar\" onClick={handleProgressBarClick}>\r\n            <div className=\"progress\">\r\n                <div className=\"inner-progress\" ref={innerProgressRef}></div>\r\n                <div\r\n                    className=\"scrubber\"\r\n                    ref={scrubberRef}\r\n                    onMouseDown={handleScrubberMouseDown}\r\n                    onMouseUp={handleScrubberMouseUp}\r\n                    onMouseMove={handleScrubberMouseMove}\r\n                ></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;"],"mappings":"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"},"metadata":{},"sourceType":"module"}